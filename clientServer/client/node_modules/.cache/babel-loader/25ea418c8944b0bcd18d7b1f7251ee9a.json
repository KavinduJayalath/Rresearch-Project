{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kavin\\\\Downloads\\\\clientServer\\\\client\\\\src\\\\trafficLight.js\",\n    _s = $RefreshSig$();\n\nimport Light from \"./Light\"; // import { useTrafficLight } from \"react-hooks-helper\";\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lightDurations = [3000, 2000, 1000];\n\nconst TrafficLight = () => {\n  _s();\n\n  const [colorIndex, setColorIndex] = useState(1);\n\n  const active = async col => {\n    setColorIndex(col);\n\n    if (col === 0) {\n      axios.get('http://localhost:8060/light/set/r').then(response => {\n        const data = response.data;\n        alert(data);\n      }).catch(error => {\n        console.error(\"Error making the API request:\", error);\n      });\n    }\n\n    if (col === 2) {\n      axios.get('http://localhost:8060/light/set/y').then(response => {\n        const data = response.data;\n        alert(data);\n      }).catch(error => {\n        console.error(\"Error making the API request:\", error);\n      });\n    }\n\n    if (col === 1) {\n      axios.get('http://localhost:8060/light/set/g').then(response => {\n        const data = response.data;\n        alert(data);\n      }).catch(error => {\n        console.error(\"Error making the API request:\", error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Traffic Lights for Vehicles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"traffic-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => active(0),\n        children: /*#__PURE__*/_jsxDEV(Light, {\n          color: \"#f00\",\n          active: colorIndex === 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => active(2),\n        children: /*#__PURE__*/_jsxDEV(Light, {\n          color: \"#ff0\",\n          active: colorIndex === 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => active(1),\n        children: /*#__PURE__*/_jsxDEV(Light, {\n          color: \"#0c0\",\n          active: colorIndex === 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TrafficLight, \"yjI3i8X16N+hiXuR7I/HoGk1F9Q=\");\n\n_c = TrafficLight;\nexport default TrafficLight;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrafficLight\");","map":{"version":3,"sources":["C:/Users/kavin/Downloads/clientServer/client/src/trafficLight.js"],"names":["Light","React","useState","useEffect","axios","lightDurations","TrafficLight","colorIndex","setColorIndex","active","col","get","then","response","data","alert","catch","error","console"],"mappings":"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","sourcesContent":["import Light from \"./Light\";\r\n// import { useTrafficLight } from \"react-hooks-helper\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport \"./styles.css\";\r\n\r\nconst lightDurations = [3000, 2000, 1000];\r\n\r\nconst TrafficLight = () => {\r\n  const [colorIndex, setColorIndex] = useState(1);\r\n\r\n  const active = async (col) => {\r\n    setColorIndex(col);\r\n    if (col === 0) {\r\n      axios.get('http://localhost:8060/light/set/r')\r\n      .then(response => {\r\n        const data = response.data;\r\n        alert(data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error making the API request:\", error);\r\n      });\r\n    }\r\n    if (col === 2) {\r\n      axios.get('http://localhost:8060/light/set/y')\r\n      .then(response => {\r\n        const data = response.data;\r\n        alert(data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error making the API request:\", error);\r\n      });\r\n    }\r\n    if (col === 1) {\r\n      axios.get('http://localhost:8060/light/set/g')\r\n      .then(response => {\r\n        const data = response.data;\r\n        alert(data);\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error making the API request:\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <h1></h1>\r\n        <h1></h1>\r\n        <h1></h1>\r\n      <h1>Traffic Lights for Vehicles</h1>\r\n        <div className=\"traffic-light\">\r\n            <button onClick={() => active(0)}>\r\n            <Light color=\"#f00\" active={colorIndex === 0} />\r\n            </button>\r\n            <button onClick={() => active(2)}>\r\n            <Light color=\"#ff0\" active={colorIndex === 2} />\r\n            </button>\r\n            <button onClick={() => active(1)}>\r\n            <Light color=\"#0c0\" active={colorIndex === 1} />\r\n            </button>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrafficLight;\r\n"]},"metadata":{},"sourceType":"module"}